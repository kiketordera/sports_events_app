// Mocks generated by Mockito 5.4.4 from annotations
// in sports_events_app/test/bloc/events_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sports_events_app/models/sports_event.dart' as _i5;
import 'package:sports_events_app/repositories/sports_event_repository.dart'
    as _i3;
import 'package:sports_events_app/services/sports_event_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSportsEventService_0 extends _i1.SmartFake
    implements _i2.SportsEventService {
  _FakeSportsEventService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SportsEventRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSportsEventRepository extends _i1.Mock
    implements _i3.SportsEventRepository {
  MockSportsEventRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SportsEventService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeSportsEventService_0(
          this,
          Invocation.getter(#service),
        ),
      ) as _i2.SportsEventService);

  @override
  _i4.Future<List<_i5.SportsEvent>> getSportsEvents() => (super.noSuchMethod(
        Invocation.method(
          #getSportsEvents,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.SportsEvent>>.value(<_i5.SportsEvent>[]),
      ) as _i4.Future<List<_i5.SportsEvent>>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
